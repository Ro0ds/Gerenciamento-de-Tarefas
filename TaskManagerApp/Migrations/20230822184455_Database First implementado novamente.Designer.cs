// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagerApp.Models;

#nullable disable

namespace TaskManagerApp.Migrations
{
    [DbContext(typeof(DbTaskmanagerContext))]
    [Migration("20230822184455_Database First implementado novamente")]
    partial class DatabaseFirstimplementadonovamente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("TaskManagerApp.Models.Tarefa", b =>
                {
                    b.Property<int>("CodTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_TAREFA");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int")
                        .HasColumnName("COD_USUARIO");

                    b.Property<DateTime?>("DataVencimentoTarefa")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_VENCIMENTO_TAREFA");

                    b.Property<string>("DescricaoTarefa")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DESCRICAO_TAREFA");

                    b.Property<string>("NomeTarefa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME_TAREFA");

                    b.Property<int>("PrioridadeTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRIORIDADE_TAREFA")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("SituacaoTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SITUACAO_TAREFA")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("CodTarefa")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodUsuario" }, "COD_USUARIO");

                    b.ToTable("tarefas", (string)null);
                });

            modelBuilder.Entity("TaskManagerApp.Models.Usuario", b =>
                {
                    b.Property<int>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("DicaSenha")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DICA_SENHA");

                    b.Property<string>("EmailUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL_USUARIO");

                    b.Property<string>("GrupoPermissao")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("GRUPO_PERMISSAO");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME_COMPLETO");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME_USUARIO");

                    b.Property<byte[]>("SaltSenhaUsuario")
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)")
                        .HasColumnName("SALT_SENHA_USUARIO");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SENHA_USUARIO");

                    b.HasKey("CodUsuario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NomeUsuario" }, "NOME_USUARIO")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("TaskManagerApp.Models.Tarefa", b =>
                {
                    b.HasOne("TaskManagerApp.Models.Usuario", "CodUsuarioNavigation")
                        .WithMany("Tarefas")
                        .HasForeignKey("CodUsuario")
                        .IsRequired()
                        .HasConstraintName("tarefas_ibfk_1");

                    b.Navigation("CodUsuarioNavigation");
                });

            modelBuilder.Entity("TaskManagerApp.Models.Usuario", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
